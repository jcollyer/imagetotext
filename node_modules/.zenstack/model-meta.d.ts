declare const metadata: {
    fields: {
        user: {
            id: {
                name: string;
                type: string;
                isId: boolean;
                attributes: {
                    name: string;
                    args: never[];
                }[];
            };
            email: {
                name: string;
                type: string;
                attributes: {
                    name: string;
                    args: never[];
                }[];
            };
            password: {
                name: string;
                type: string;
            };
            tasks: {
                name: string;
                type: string;
                isDataModel: boolean;
                isArray: boolean;
                backLink: string;
            };
        };
        item: {
            id: {
                name: string;
                type: string;
                isId: boolean;
                attributes: {
                    name: string;
                    args: never[];
                }[];
            };
            createdAt: {
                name: string;
                type: string;
                attributes: {
                    name: string;
                    args: never[];
                }[];
            };
            updatedAt: {
                name: string;
                type: string;
                attributes: {
                    name: string;
                    args: never[];
                }[];
            };
            name: {
                name: string;
                type: string;
            };
            content: {
                name: string;
                type: string;
            };
            task: {
                name: string;
                type: string;
                isDataModel: boolean;
                isOptional: boolean;
                attributes: {
                    name: string;
                    args: never[];
                }[];
                backLink: string;
                isRelationOwner: boolean;
                foreignKeyMapping: {
                    id: string;
                };
            };
            taskId: {
                name: string;
                type: string;
                isOptional: boolean;
                isForeignKey: boolean;
            };
        };
        task: {
            id: {
                name: string;
                type: string;
                isId: boolean;
                attributes: {
                    name: string;
                    args: never[];
                }[];
            };
            createdAt: {
                name: string;
                type: string;
                attributes: {
                    name: string;
                    args: never[];
                }[];
            };
            updatedAt: {
                name: string;
                type: string;
                attributes: {
                    name: string;
                    args: never[];
                }[];
            };
            items: {
                name: string;
                type: string;
                isDataModel: boolean;
                isArray: boolean;
                backLink: string;
            };
            user: {
                name: string;
                type: string;
                isDataModel: boolean;
                attributes: {
                    name: string;
                    args: never[];
                }[];
                backLink: string;
                isRelationOwner: boolean;
                foreignKeyMapping: {
                    id: string;
                };
            };
            userId: {
                name: string;
                type: string;
                isForeignKey: boolean;
            };
        };
    };
    uniqueConstraints: {
        user: {
            id: {
                name: string;
                fields: string[];
            };
            email: {
                name: string;
                fields: string[];
            };
        };
        item: {
            id: {
                name: string;
                fields: string[];
            };
        };
        task: {
            id: {
                name: string;
                fields: string[];
            };
        };
    };
    deleteCascade: {};
    authModel: string;
};
export default metadata;
