"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ItemUpdateSchema = exports.ItemUpdateScalarSchema = exports.ItemCreateSchema = exports.ItemCreateScalarSchema = exports.ItemPrismaUpdateSchema = exports.ItemPrismaCreateSchema = exports.ItemSchema = exports.ItemScalarSchema = void 0;
/* eslint-disable */
const zod_1 = require("zod");
const baseSchema = zod_1.z.object({
    id: zod_1.z.string(),
    createdAt: zod_1.z.coerce.date().default(() => new Date()),
    updatedAt: zod_1.z.coerce.date(),
    name: zod_1.z.string(),
    content: zod_1.z.string(),
});
const relationSchema = zod_1.z.object({
    user: zod_1.z.record(zod_1.z.unknown()),
    userId: zod_1.z.string(),
});
const fkSchema = zod_1.z.object({
    userId: zod_1.z.string(),
});
exports.ItemScalarSchema = baseSchema.partial({
    id: true, updatedAt: true, name: true, content: true
});
exports.ItemSchema = exports.ItemScalarSchema.merge(relationSchema.partial());
exports.ItemPrismaCreateSchema = baseSchema.partial().passthrough();
exports.ItemPrismaUpdateSchema = zod_1.z.object({
    id: zod_1.z.string(),
    createdAt: zod_1.z.coerce.date(),
    updatedAt: zod_1.z.coerce.date(),
    name: zod_1.z.string(),
    content: zod_1.z.string()
}).partial();
exports.ItemCreateScalarSchema = baseSchema.partial({
    id: true, createdAt: true, updatedAt: true
});
exports.ItemCreateSchema = exports.ItemCreateScalarSchema.merge(fkSchema);
exports.ItemUpdateScalarSchema = baseSchema.partial();
exports.ItemUpdateSchema = exports.ItemUpdateScalarSchema.merge(fkSchema.partial());
